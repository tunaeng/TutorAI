#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

async def seed_data():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from app.core.database import async_session, engine
        from app.models.education import (
            CourseProgram, Student, Stream, Module, Lesson,
            CourseMaterial, Schedule, Assignment, Message, BotResponse
        )
        from sqlalchemy.ext.asyncio import AsyncSession
        
        print("üå± –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        async with async_session() as session:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É –∫—É—Ä—Å–∞
            program = CourseProgram(
                name="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –ò–ò –≤ —Å—Ñ–µ—Ä–µ –∫—É–ª—å—Ç—É—Ä—ã",
                description="–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–µ —Å –ò–ò",
                total_hours=144
            )
            session.add(program)
            await session.flush()
            
            # –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª–∏
            modules_data = [
                {"name": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ò–ò", "order_num": 1, "duration_hours": 15},
                {"name": "–ë–æ–ª—å—à–∏–µ —è–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏", "order_num": 2, "duration_hours": 44},
                {"name": "–î–∏—Ñ—Ñ—É–∑–∏–æ–Ω–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏", "order_num": 3, "duration_hours": 11},
                {"name": "–ò–ò –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö", "order_num": 4, "duration_hours": 11},
                {"name": "–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã", "order_num": 5, "duration_hours": 11}
            ]
            
            modules = []
            for module_data in modules_data:
                module = Module(
                    program_id=program.program_id,
                    **module_data
                )
                session.add(module)
                modules.append(module)
            
            await session.flush()
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
            student = Student(
                phone="+79123456789",
                name="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                telegram_user_id=123456789,
                telegram_username="ivan_petrov",
                is_active=True,
                course_program_id=program.program_id
            )
            session.add(student)
            await session.flush()
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫
            stream = Stream(
                program_id=program.program_id,
                name="–û–∫—Ç—è–±—Ä—å 2025",
                start_date="2025-10-01",
                end_date="2025-12-31"
            )
            session.add(stream)
            await session.flush()
            
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = Message(
                chat_id=123456789,
                sender_type="user",
                sender_id=student.student_id,
                text_content="–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ò–ò –≤ –∫—É–ª—å—Ç—É—Ä–µ"
            )
            session.add(message)
            await session.flush()
            
            # –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
            bot_response = BotResponse(
                message_id=message.message_id,
                text_content="–ü—Ä–∏–≤–µ—Ç! –ò–ò –≤ –∫—É–ª—å—Ç—É—Ä–µ - —ç—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å..."
            )
            session.add(bot_response)
            
            await session.commit()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(seed_data())